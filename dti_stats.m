function pdf_path = dti_stats(job_dir_path, dwmri_path, bvec_path, bval_path, mask_path, fsl_path, camino_path, csf_info, bet_params, movement_params_path)
    % Performs DTI stats pipeline. This pipeline was designed to keep the 
    % nifti header the same, so no reorientation of the nifti is done.
    %
    % INPUTS: 
    %   job_dir_path - path to job directory
    %   dwmri_path - path to dwmri file
    %   bvec_path - path to FSL style bvec file. Assumes bvecs are in 
    %       "voxel convention"
    %   bval_path - path to FSL style bval file
    %   mask_path - path to mask file
    %   fsl_path - path to FSL installation
    %   camino_path - path to camino installation
    %   csf_info - struct containing csf info:
    %       label_path - path to probabilistic CSF label
    %       template_path - path to corresponding T2 template used for
    %           fnirt registration to get CSF label in diffusion space
    %       template_masked_path - path to corresponding masked T2 template
    %           used for flirt registration to get initial guess for fnirt
    %   bet_params - parameters used with BET function
    %   movement_params_path - optional movement params path to plot
    %       movement correction done during preprocessing. Movement params
    %       file is optional because file is generated during preprocessing
    %       (typically by FSL's eddy). If you want to do a different 
    %       preprocessing pipeline, you need to supply the first six 
    %       columns (rotation and movement) and emulate eddy's output --or--
    %       you can omit it.
    % 
    % OUTPUTS: 
    %   Absolute path to the pdf file which is generated.
            
    % Use exec_gen to generate full path to fsl and camino executables
    fsl_exec = system_utils.exec_gen(fullfile(fsl_path,'bin'));
    camino_exec = system_utils.exec_gen(fullfile(camino_path,'bin'));

    % Setup job directory ------------------------------------------------%
    job_dir = system_utils.directory(job_dir_path);
    job_dir.mkdir_with_warning('Files in this directory may get modified in-place.');
    
    % Handle inputs ------------------------------------------------------%
    dwmri_file = system_utils.file.validate_path(dwmri_path);
    bvec_file = system_utils.file.validate_path(bvec_path);
    bval_file = system_utils.file.validate_path(bval_path);
    mask_file = system_utils.file.validate_path(mask_path);
    
    % Get movement params file; set to an empty file if path has not been
    % provided
    movement_params_file = system_utils.file.empty();
    if exist('movement_params_path','var')
        movement_params_file = system_utils.file.validate_path(movement_params_path);
    end
    
    % Form stats mask ----------------------------------------------------%
    stats_mask_file = lib.stats_mask(job_dir, ...
                                     dwmri_file, ...
                                     bval_file, ...
                                     mask_file, ...
                                     fsl_exec);
    
    % Compute sigma (standard deviation) used in RESTORE -----------------%
    sigma_est = lib.sigma(job_dir, ...
                          dwmri_file, ...
                          bval_file, ...
                          stats_mask_file, ...
                          csf_info, ...
                          bet_params, ...
                          fsl_exec);
    
    % Perform RESTORE fit ------------------------------------------------%
    [dt_file, fa_file, md_file, v1_file, outliers_file] = lib.restore(job_dir, ...
                                                                      dwmri_file, ...
                                                                      bvec_file, ...
                                                                      bval_file, ...
                                                                      mask_file, ...
                                                                      sigma_est, ...
                                                                      camino_exec); %#ok<ASGLU>
            
    % Get CHI^2 plot -----------------------------------------------------%
    [chi_squared_plot, dwi_model_file] = lib.chi_squared(job_dir, ...
                                                         dwmri_file, ...
                                                         bvec_file, ...
                                                         bval_file, ...
                                                         mask_file, ...
                                                         dt_file, ...
                                                         stats_mask_file);
                                                       
    % Form stats plot ----------------------------------------------------%
    pdf_file = lib.stats_plot(job_dir, ...
                              dwmri_file, ...
                              bval_file, ...
                              mask_file, ...
                              stats_mask_file, ...
                              sigma_est, ...
                              dt_file, ...
                              v1_file, ...
                              fa_file, ...
                              outliers_file, ...
                              chi_squared_plot, ...
                              dwi_model_file, ...
                              movement_params_file);      
                                                    
    % Assign outputs -----------------------------------------------------%
    pdf_path = pdf_file.get_path();
end
