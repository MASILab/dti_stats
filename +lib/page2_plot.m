function f = page2_plot(dwmri_file,bval_file,mask_file,dt_file,v1_file,fa_file)
    % Load data
    dwmri_hdr = load_untouch_header_only(dwmri_file.get_path());
    dwmri_vol = nifti_utils.load_untouch_nii4D_vol_scaled(dwmri_file.get_path(),'double');
    bvals = bval_file.dlmread(); 
    mask_vol = nifti_utils.load_untouch_nii_vol_scaled(mask_file.get_path(),'logical');  
    dt_vol = nifti_utils.load_untouch_nii4D_vol_scaled(dt_file.get_path(),'double');
    v1_vol = nifti_utils.load_untouch_nii4D_vol_scaled(v1_file.get_path(),'double');
    fa_vol = nifti_utils.load_untouch_nii4D_vol_scaled(fa_file.get_path(),'double');
    xform_RAS = nifti_utils.get_voxel_RAS_xform(dwmri_file.get_path());

    % Get visualizer
    dwmri_mean_vol = nanmean(dwmri_vol(:,:,:,bvals == max(bvals)),4);
    dwmri_mean_min = prctile(dwmri_mean_vol(mask_vol),5);
    dwmri_mean_max = prctile(dwmri_mean_vol(mask_vol),99);
    dwmri_mean_vol = (dwmri_mean_vol-dwmri_mean_min)./(dwmri_mean_max-dwmri_mean_min);
    dv = dwmri_visualizer({dt_vol,v1_vol}, ...    
                          dwmri_mean_vol, ...
                          fa_vol*1.75, ...
                          xform_RAS, ...
                          'DT', ...
                          {40,1});

    % Make the plot
    f = dwmri_axial_coronal_plot(dv, ...
                                 {'DTI STATS', ...
                                 ['   Scan Description: ' dwmri_hdr.hist.descrip], ...
                                 ['   Gradient Directions: ' num2str(length(find(bvals)))], ...
                                 ['   Slice Dimensions: ' num2str(dwmri_hdr.dime.dim(2)) ',' num2str(dwmri_hdr.dime.dim(3))], ...
                                 ['   Slices: ' num2str(dwmri_hdr.dime.dim(4))], ...
                                 ['   Voxel Resolution: ' num2str(round(dwmri_hdr.dime.pixdim(2),1)) ' x ' num2str(round(dwmri_hdr.dime.pixdim(3),1)) ' x ' num2str(round(dwmri_hdr.dime.pixdim(4),1))], ...
                                 'Justin Blaber (based on code from Carolyn B. Lauzon', ...
                                 'justin.blaber@vanderbilt.edu', ...
                                 'Simultaneous Analysis and Quality Assurance for Diffusion Tensor Imaging (Lauzon et al 2013)', ...
                                 'bennett.landman@vanderbilt.edu', ...
                                 'N/A'});
                             
    % Apply light to axes
    all_axes = findall(f,'type','axes');
    for i = 1:length(all_axes)
        light(all_axes(i), 'Position', [5, 5, 5], 'Style', 'infinite');
    end
end
